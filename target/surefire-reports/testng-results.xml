<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-29T13:28:50 IST" name="Suite" finished-at="2024-01-29T13:31:24 IST" duration-ms="154455">
    <groups>
    </groups>
    <test started-at="2024-01-29T13:28:50 IST" name="Test" finished-at="2024-01-29T13:31:24 IST" duration-ms="154455">
      <class name="script.login.ValidPhoneNumberLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.login.ValidPhoneNumberLogin@76b1e9b8]" started-at="2024-01-29T13:31:14 IST" name="preCondition" finished-at="2024-01-29T13:31:18 IST" duration-ms="3743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.login.ValidPhoneNumberLogin.testValidLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testValidLogin()[pri:1, instance:script.login.ValidPhoneNumberLogin@76b1e9b8]" started-at="2024-01-29T13:31:18 IST" name="testValidLogin" finished-at="2024-01-29T13:31:24 IST" duration-ms="5798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.login.ValidPhoneNumberLogin@76b1e9b8]" started-at="2024-01-29T13:31:24 IST" name="postCondition" finished-at="2024-01-29T13:31:24 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidPhoneNumberLogin.testValidLogin()[pri:1, instance:script.login.ValidPhoneNumberLogin@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.login.ValidPhoneNumberLogin -->
      <class name="script.search.Search">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:02 IST" name="preCondition" finished-at="2024-01-29T13:29:06 IST" duration-ms="4220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.search.Search.testSearchProduct(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:06 IST" name="testSearchProduct" data-provider="provideSearchKeywords" finished-at="2024-01-29T13:29:17 IST" duration-ms="10507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:17 IST" name="postCondition" finished-at="2024-01-29T13:29:17 IST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=SUCCESS method=Search.testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:17 IST" name="preCondition" finished-at="2024-01-29T13:29:21 IST" duration-ms="3721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.search.Search.testSearchProduct(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:21 IST" name="testSearchProduct" data-provider="provideSearchKeywords" finished-at="2024-01-29T13:29:32 IST" duration-ms="11499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:32 IST" name="postCondition" finished-at="2024-01-29T13:29:33 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=SUCCESS method=Search.testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:33 IST" name="preCondition" finished-at="2024-01-29T13:29:36 IST" duration-ms="3274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.search.Search.testSearchProduct(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:36 IST" name="testSearchProduct" data-provider="provideSearchKeywords" finished-at="2024-01-29T13:29:48 IST" duration-ms="12317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 + mobile]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:48 IST" name="postCondition" finished-at="2024-01-29T13:29:49 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=SUCCESS method=Search.testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:49 IST" name="preCondition" finished-at="2024-01-29T13:29:52 IST" duration-ms="3727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.search.Search.testSearchProduct(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:29:52 IST" name="testSearchProduct" data-provider="provideSearchKeywords" finished-at="2024-01-29T13:30:02 IST" duration-ms="9670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[---]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:30:02 IST" name="postCondition" finished-at="2024-01-29T13:30:02 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=SUCCESS method=Search.testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:30:02 IST" name="preCondition" finished-at="2024-01-29T13:30:06 IST" duration-ms="3901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.search.Search.testSearchProduct(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:30:06 IST" name="testSearchProduct" data-provider="provideSearchKeywords" finished-at="2024-01-29T13:30:15 IST" duration-ms="8938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uuououoi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.search.Search@27406a17]" started-at="2024-01-29T13:30:15 IST" name="postCondition" finished-at="2024-01-29T13:30:15 IST" duration-ms="285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=SUCCESS method=Search.testSearchProduct(java.lang.String)[pri:0, instance:script.search.Search@27406a17] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.search.Search -->
      <class name="script.login.MissingEmailLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.login.MissingEmailLogin@74ea2410]" started-at="2024-01-29T13:30:58 IST" name="preCondition" finished-at="2024-01-29T13:31:02 IST" duration-ms="3926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.login.MissingEmailLogin.testMissingEmaildLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testMissingEmaildLogin()[pri:4, instance:script.login.MissingEmailLogin@74ea2410]" started-at="2024-01-29T13:31:02 IST" name="testMissingEmaildLogin" finished-at="2024-01-29T13:31:06 IST" duration-ms="3721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingEmaildLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.login.MissingEmailLogin@74ea2410]" started-at="2024-01-29T13:31:06 IST" name="postCondition" finished-at="2024-01-29T13:31:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMissingEmaildLogin status=SUCCESS method=MissingEmailLogin.testMissingEmaildLogin()[pri:4, instance:script.login.MissingEmailLogin@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.login.MissingEmailLogin -->
      <class name="script.userflow.UserFlow">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:15 IST" name="preCondition" finished-at="2024-01-29T13:30:18 IST" duration-ms="2842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.userflow.UserFlow.testSearchProduct(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:18 IST" name="testSearchProduct" data-provider="getData" finished-at="2024-01-29T13:30:30 IST" duration-ms="11872" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[keyboard]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at script.userflow.UserFlow.testSearchProduct(UserFlow.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:30 IST" name="postCondition" finished-at="2024-01-29T13:30:31 IST" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=FAILURE method=UserFlow.testSearchProduct(java.lang.String,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:31 IST" name="preCondition" finished-at="2024-01-29T13:30:35 IST" duration-ms="3916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.userflow.UserFlow.testSearchProduct(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testSearchProduct(java.lang.String,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:35 IST" name="testSearchProduct" data-provider="getData" finished-at="2024-01-29T13:30:50 IST" duration-ms="14843" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[mouse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with text: 3
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with text: 3
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:153)
at page.ResultPage.setQuantity(ResultPage.java:92)
at script.userflow.UserFlow.testSearchProduct(UserFlow.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchProduct -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.userflow.UserFlow@2af004b]" started-at="2024-01-29T13:30:50 IST" name="postCondition" finished-at="2024-01-29T13:30:50 IST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchProduct status=FAILURE method=UserFlow.testSearchProduct(java.lang.String,java.lang.String)[pri:0, instance:script.userflow.UserFlow@2af004b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.userflow.UserFlow -->
      <class name="script.login.IncorrectPhoneLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.login.IncorrectPhoneLogin@25ce9dc4]" started-at="2024-01-29T13:30:50 IST" name="preCondition" finished-at="2024-01-29T13:30:54 IST" duration-ms="3578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.login.IncorrectPhoneLogin.testIncorrectPhoneLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testIncorrectPhoneLogin()[pri:2, instance:script.login.IncorrectPhoneLogin@25ce9dc4]" started-at="2024-01-29T13:30:54 IST" name="testIncorrectPhoneLogin" finished-at="2024-01-29T13:30:58 IST" duration-ms="4372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncorrectPhoneLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.login.IncorrectPhoneLogin@25ce9dc4]" started-at="2024-01-29T13:30:58 IST" name="postCondition" finished-at="2024-01-29T13:30:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testIncorrectPhoneLogin status=SUCCESS method=IncorrectPhoneLogin.testIncorrectPhoneLogin()[pri:2, instance:script.login.IncorrectPhoneLogin@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.login.IncorrectPhoneLogin -->
      <class name="script.login.IncorrectEmailLogin">
        <test-method is-config="true" signature="setReport()[pri:0, instance:script.login.IncorrectEmailLogin@15bb5034]" started-at="2024-01-29T13:28:49 IST" name="setReport" finished-at="2024-01-29T13:28:50 IST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReport -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.login.IncorrectEmailLogin@15bb5034]" started-at="2024-01-29T13:28:50 IST" name="preCondition" finished-at="2024-01-29T13:28:56 IST" duration-ms="6153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.login.IncorrectEmailLogin.incorrectEmailLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="incorrectEmailLogin()[pri:3, instance:script.login.IncorrectEmailLogin@15bb5034]" started-at="2024-01-29T13:28:56 IST" name="incorrectEmailLogin" finished-at="2024-01-29T13:29:02 IST" duration-ms="6331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmailLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.login.IncorrectEmailLogin@15bb5034]" started-at="2024-01-29T13:29:02 IST" name="postCondition" finished-at="2024-01-29T13:29:02 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=incorrectEmailLogin status=SUCCESS method=IncorrectEmailLogin.incorrectEmailLogin()[pri:3, instance:script.login.IncorrectEmailLogin@15bb5034] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.login.IncorrectEmailLogin@15bb5034]" started-at="2024-01-29T13:31:24 IST" name="publishReport" finished-at="2024-01-29T13:31:25 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.login.IncorrectEmailLogin -->
      <class name="script.login.MissingPasswordLogin">
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.login.MissingPasswordLogin@17f62e33]" started-at="2024-01-29T13:31:06 IST" name="preCondition" finished-at="2024-01-29T13:31:09 IST" duration-ms="3574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.login.MissingPasswordLogin.testMissingPasswordLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa_env.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testMissingPasswordLogin()[pri:5, instance:script.login.MissingPasswordLogin@17f62e33]" started-at="2024-01-29T13:31:09 IST" name="testMissingPasswordLogin" finished-at="2024-01-29T13:31:14 IST" duration-ms="4864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingPasswordLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.login.MissingPasswordLogin@17f62e33]" started-at="2024-01-29T13:31:14 IST" name="postCondition" finished-at="2024-01-29T13:31:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMissingPasswordLogin status=SUCCESS method=MissingPasswordLogin.testMissingPasswordLogin()[pri:5, instance:script.login.MissingPasswordLogin@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.login.MissingPasswordLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
